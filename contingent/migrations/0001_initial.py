# Generated by Django 3.2 on 2021-04-18 01:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, max_length=500, null=True, verbose_name='Регион')),
                ('district', models.CharField(blank=True, max_length=500, null=True, verbose_name='Район')),
                ('settlement', models.CharField(blank=True, max_length=500, null=True, verbose_name='Поселок')),
                ('street', models.CharField(blank=True, max_length=500, null=True, verbose_name='Улица')),
                ('building', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер дома')),
                ('flat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер квартиры')),
                ('index', models.CharField(blank=True, max_length=16, null=True, verbose_name='Почтовый индекс')),
                ('kladr_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код КЛАДР')),
                ('fias_unid', models.CharField(blank=True, max_length=500, null=True, verbose_name='Код ФИАС')),
            ],
        ),
        migrations.CreateModel(
            name='DictCitizen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citizen', models.CharField(max_length=100)),
                ('smallname', models.CharField(blank=True, max_length=20, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DictEduForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DictEduType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DictLang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.IntegerField(blank=True, choices=[(1, 'Английский'), (2, 'Немецкий'), (3, 'Французский'), (4, 'Испанский'), (5, 'Итальянский'), (6, 'Турецкий'), (7, 'Корейский'), (8, 'Арабский'), (9, 'Русский'), (10, 'Другой')], null=True)),
                ('smallname', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DictPrevEduLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevEduLevel', models.IntegerField(blank=True, choices=[(1, 'Среднее специальное'), (2, 'Среднее общее'), (3, 'Среднее профессиональное'), (4, 'Начальное профессиональное')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DictReasonDeductStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.IntegerField(blank=True, choices=[(1, 'По неуспеваемости'), (2, 'По собственному желанию'), (3, 'Переводом в другой вуз'), (4, 'Из академ. отпуска'), (5, 'В связи с просрочкой оплаты'), (6, 'По причине смерти'), (7, 'По болезни'), (8, 'В связи с не прохождением итоговой аттестации'), (9, 'В связи с призывом в ряды вооруженных сил'), (10, 'Не приступившего к занятиям'), (11, 'Другая причина'), (12, 'Отчислить условно переведенного')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DictStipendType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Базовая стипендия'), (1, 'Первый курс первый семестр'), (2, 'Обучающиеся на хорошо'), (3, 'Обучающиеся на хорошо и отлично'), (4, 'Обучающиеся на отлично'), (5, 'За достижения в учебной деятельности'), (6, 'За достижения в научной деятельности'), (7, 'За достижения в общ., культ. или спорт. деятельности')], default=0)),
                ('percent', models.IntegerField(blank=True, null=True, verbose_name='Процент от базовой')),
                ('amount', models.IntegerField(verbose_name='Сумма стипендии')),
                ('code', models.IntegerField(blank=True, null=True, verbose_name='Код для бухгалтерии')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название группы')),
                ('kurs', models.IntegerField(blank=True, default=1, null=True, verbose_name='Курс')),
                ('created_year', models.IntegerField(blank=True, default=2000, null=True, verbose_name='Год создания группы')),
                ('created_date_group', models.DateField(blank=True, null=True, verbose_name='Дата создания')),
                ('free_date_group', models.DateField(blank=True, null=True, verbose_name='Дата расформирования группы')),
            ],
            options={
                'ordering': ('-created_year', 'name_group'),
            },
        ),
        migrations.CreateModel(
            name='RegionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_type', models.CharField(max_length=10, verbose_name='Сокращенный тип')),
                ('type', models.CharField(max_length=100, verbose_name='Полный тип')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SettlementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_type', models.CharField(max_length=10, verbose_name='Сокращенный тип')),
                ('type', models.CharField(max_length=100, verbose_name='Полный тип')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StreetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_type', models.CharField(max_length=10, verbose_name='Сокращенный тип')),
                ('type', models.CharField(max_length=100, verbose_name='Полный тип')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Наименование предприятия')),
                ('addr', models.CharField(blank=True, max_length=500, null=True, verbose_name='Адрес предприятия')),
                ('self', models.BooleanField(blank=True, default=False, verbose_name='Самостоятельное трудоустройство')),
                ('cert', models.CharField(blank=True, max_length=500, null=True, verbose_name='Удостоверение о трудоустройстве')),
            ],
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'мужской'), (0, 'женский')], null=True, verbose_name='Пол')),
                ('phone_1c', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефоны из 1С')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-Mail')),
                ('family_status', models.IntegerField(blank=True, choices=[(0, 'неженат/незамужем'), (1, 'женат/замужем')], null=True, verbose_name='Семейное положение')),
                ('is_orphan', models.BooleanField(blank=True, default=False, verbose_name='Сирота')),
                ('is_invalid', models.BooleanField(blank=True, default=False, verbose_name='Инвалид')),
                ('invalid_group', models.IntegerField(blank=True, null=True, verbose_name='Группа инвалидности')),
                ('is_chernobyl', models.BooleanField(blank=True, default=False, verbose_name='Чернобыль')),
                ('is_large_family', models.BooleanField(blank=True, default=False, verbose_name='Из многодетной семьи')),
                ('children_count', models.PositiveSmallIntegerField(default=0, verbose_name='Количество детей')),
                ('single_mother', models.BooleanField(blank=True, default=False, verbose_name='Мать-одиночка')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photo/', verbose_name='Фото')),
                ('payment_contract_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер договора')),
                ('citizen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contingent.dictcitizen')),
                ('fact_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contingent.address', verbose_name='Фактический адрес проживания')),
                ('foreign_lang', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contingent.dictlang')),
                ('reg_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contingent.address', verbose_name='Адрес регистрации')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(blank=True, max_length=100, null=True, verbose_name='Уникальный идентификатор человека')),
                ('name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=256, null=True, verbose_name='Отчество')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Абитуриент'), (1, 'Обучающийся'), (2, 'Выпускник'), (3, 'Отчисленный'), (4, 'В академическом отпуске')], null=True)),
                ('zcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер зачетной книжки')),
                ('kurs', models.IntegerField(default=1)),
                ('edu_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.dictedutype')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.group')),
                ('info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.studentinfo')),
                ('job', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.studentjob')),
            ],
            options={
                'ordering': ('surname', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Spec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Наименование')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код')),
                ('default_group_name', models.CharField(blank=True, max_length=20, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.spec')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='spec_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contingent.spec'),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.dictcitizen', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='address',
            name='region_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.regiontype', verbose_name='Тип региона'),
        ),
        migrations.AddField(
            model_name='address',
            name='settlement_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.settlementtype', verbose_name='Тип населенного пункта'),
        ),
        migrations.AddField(
            model_name='address',
            name='street_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contingent.streettype', verbose_name='Тип улицы'),
        ),
    ]
